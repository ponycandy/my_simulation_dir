1.
restoration failed

查看输出的inf_pr项的最大值，如果是6.28e66这种非常大的值
那么就很有可能是因为
初始化constrain的时候，constrain的数目不对，导致多出来几行没有赋值的约束参数
记得std::cout<<g<<std::endl查看一下

2.Ipopt另一个问题是：、
Converged to a point of local infeasibility. Problem may be infeasible.

一般认为是我们的梯度计算有问题，使用finite-difference-values来试试看能不能求解

我们最好还是用ATGlib来求梯度最不容易出错

3.
优化的提前终止

有的时候，我们只要求目标函数在0.1以下（误差小于0.1）就可以了，这个时候往往不需要
那么多的循环数，那么如何根据objective进行提前终止呢？

    <acceptable_obj_change_tol type="double">
        <value>0.01</value>
    </acceptable_obj_change_tol>
当目标函数的变化值小于一个值的时候提前终止。

4.增大dec_num后无解

5.有一个问题，这个问题或许可以回答为什么含有cost的Ipopt几乎无法求解：
Ifopt库实际上不提供cost的Hession矩阵
这会导致一个相当严重的问题
凡是包含cost的项，都无法使用Ipopt......

这个原因是最为可能的
因为设置自动梯度计算之后
目标函数确实是可以求解的了

这一点在这里有提到：
https://github.com/ethz-adrl/ifopt/issues/41
这就是为什么我们每次添加cost项都会失败的原因了
既然如此，我们将问题转化为全约束形式的吧

